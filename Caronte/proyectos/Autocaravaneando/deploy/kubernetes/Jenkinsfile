pipeline {
    agent any 

    environment {
        # Path where NGINX is serving files on your server
        # Make sure this matches your NGINX config's 'root' directive
        DEPLOY_DIR = '/var/www/misitio'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository from GitHub...'
                # This clones your repository into the Jenkins workspace for this job
                git branch: 'master', url: 'https://github.com/jazmin0618/HLC-PROYECTO.git'
            }
        }

        stage('Deploy Website to NGINX') {
            steps {
                echo 'Deploying website files...'
                script {
                    // Get the path to the current workspace (where Git cloned the repo)
                    def workspacePath = pwd()

                    // IMPORTANT: Clean previous deployment (be careful with rm -rf!)
                    // This assumes /var/www/misitio is exclusively for this website
                    sh "sudo rm -rf ${env.DEPLOY_DIR}/*"

                    // Copy all files from the Jenkins workspace to the NGINX serving directory
                    // Adjust this if your actual website files are in a subfolder (e.g., 'dist')
                    // For example: sh "sudo cp -r ${workspacePath}/dist/* ${env.DEPLOY_DIR}/"
                    sh "sudo cp -r ${workspacePath}/* ${env.DEPLOY_DIR}/"

                    // Set correct permissions for NGINX to read the files
                    // www-data is the common user/group for web servers on Debian/Ubuntu
                    sh "sudo chown -R www-data:www-data ${env.DEPLOY_DIR}"
                    sh "sudo chmod -R 755 ${env.DEPLOY_DIR}"

                    echo 'Website deployment complete!'
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline finished successfully. Website should be updated."
        }
        failure {
            echo "Pipeline failed. Check build logs for errors."
        }
    }
}